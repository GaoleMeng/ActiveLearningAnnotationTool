in articl 1s1dbminnehb elang05 acslab umbc edu olson umbc edu bryan olson cmsc g write the on time pad yeild ideal secur but ha a well known flaw in authent suppos you us a random bit stream as the pad and exclus or as the encrypt oper if an adversari know the plaintext of a messag he can chang it into ani other messag here s how it work alic is send bob a plaintext p under a kei stream s alic comput the ciphertext c s xor p and send it to bob ev know the plainext p but want the messag to appear as p ev intercept c and comput c c xor p xor p s xor p ev send c to bob bob decrypt c by comput c xor s p thu receiv the fals messag which wa substitut by ev firstli an asid i agre that the weak exist but i have a lot of troubl believ that it repres a difficulti in real life given 1 the purpos of the on time pad is to give unbreak secur and the expens of kei distribut etc impli that the client realli do want that level of secur 2 these same peopl want to keep p a secret i find it hard to believ that ev might happen to have a copi of p ly around i am awar that the same argument appli to ev know even a small part of the messag but ev must know exactli where which byte in c her known susequ start or the result will be garbl i find thi at least as surpris back to the question if i had the resourc to us a on time pad for such transmiss i would also append a messag authent code to the messag us up the next bit of the on time pad as the kei perhap your origin question basic ask whether there wa ani wai to authent the messag with the same degre of secur as the pad itself provid and i don t know the answer howev i would propos the follow for discuss alic and bob have an arbitrari number of secret random bit to share which ev doesn t know she find them out effect by know some p and the correspond c it is the fact that thei correspond that caus the problem if a messag authent code wa to be creat us some on time pad oper such that ev could not know which part of the mac were affect by which part of the input she would be unabl to forg a mac to correspond what is requir is a non linear combin of part of the messag non linear so that simpli xore or subtract or whatev doesn t have exactli the same effect now at the end of the encrypt messag c alic append a n bit mac comput as follow s2 mean the next full chunk of the on time pad 1 comput c2 p xor s2 and pad to an n bit boundari with more of s 2 break c2 into n bit chunk 3 set mac to 0 initialis vector 4 for i in each chunk sequenti set mac mac nlop c2 i at the end of thi process mac is the messag authent code bob verifi the mac in the obviou manner he recov the plaintext p then us some more of hi pad to reproduc the mac in the same manner nlop is the non linear oper and there is the rub the simplest non linear oper i can think of is an s box that is have a fix even publish permut of the n bit integ an index tabl call sbox and us x nlop y x xor sbox y practic speak i think thi solv your problem as ev never see the intermedi output c2 and henc can t deduc s2 or perform ani valid substitut on it also practic speak you want the mac to be fairli larg sai 32 bit but you might not want a 4 gigabyt sai s box so you might work on 4 byte size s box but i think that is an irrelev detail for the discuss at hand who will be first to point out my error or give me a pointer to some literatur greg rose australian comput and commun institut ggr acci com au 61 18 174 842 us of the standard phrase hijack mai be inadvis caa
